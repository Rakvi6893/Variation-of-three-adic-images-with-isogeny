N:=45;
GL2:=GL(2,Integers(N));
G:=sub<GL2|[[22,43,37,32],[23,22,6,22],[24,29,10,21],[33,43,25,2]]>;
Grec:=CreateModularCurveRec(N,Generators(G));
Model:=FindModelOfXG(Grec,27)`psi;
x:=AssociativeArray();
P2:=ProjectiveSpace(Rationals(),7);
for i in [1..8] do;
    x[i]:=P2.i;
end for;
C:=Scheme(P2,Model);
C3:=Reduction(C,3);
P:=Points(C3);

  for a in Integers(9) do;
for b in Integers(9) do;
for c in Integers(9) do;
for d in Integers(9) do;
for e in Integers(9) do;
for f in Integers(9) do;
for g in Integers(9) do;
for h in Integers(9) do;
if Integers()!a mod 3 eq P[1][1] and Integers()!b mod 3 eq P[1][2] and Integers()!c mod 3 eq P[1][3] and Integers()!d mod 3 eq P[1][4] and
Integers()!e mod 3 eq P[1][5] and Integers()!f mod 3 eq P[1][6] and Integers()!g mod 3 eq P[1][7] and Integers()!h mod 3 eq P[1][8] then
S:=[Evaluate(DefiningEquations(C)[i],[a,b,c,d,e,f,g,h]): i in [1..#DefiningEquations(C)]];
if Integers()!S[1] mod 9 eq 0 and Integers()!S[2] mod 9 eq 0 and Integers()!S[3] mod 9 eq 0 and Integers()!S[4] mod 9 eq 0 and Integers()!S[5] mod 9 eq 0 and Integers()!S[6] mod 9 eq 0 and Integers()!S[7] mod 9 eq 0  and Integers()!S[8] mod 9 eq 0
and Integers()!S[9] mod 9 eq 0 and Integers()!S[10] mod 9 eq 0 and Integers()!S[11] mod 9 eq 0 and Integers()!S[12] mod 9 eq 0
and Integers()!S[13] mod 9 eq 0 and Integers()!S[14] mod 9 eq 0 and Integers()!S[15] mod 9 eq 0 then [a,b,c,d];
end if;
else continue;
end if;
end for;end for;end for;end for;end for;end for;end for;end for;



 for a in Integers(9) do;
for b in Integers(9) do;
for c in Integers(9) do;
for d in Integers(9) do;
for e in Integers(9) do;
for f in Integers(9) do;
for g in Integers(9) do;
for h in Integers(9) do;
if Integers()!a mod 3 eq P[2][1] and Integers()!b mod 3 eq P[2][2] and Integers()!c mod 3 eq P[2][3] and Integers()!d mod 3 eq P[2][4] and
Integers()!e mod 3 eq P[2][5] and Integers()!f mod 3 eq P[2][6] and Integers()!g mod 3 eq P[2][7] and Integers()!h mod 3 eq P[2][8]  then
S:=[Evaluate(DefiningEquations(C)[i],[a,b,c,d,e,f,g,h]): i in [1..#DefiningEquations(C)]];
if Integers()!S[1] mod 9 eq 0 and Integers()!S[2] mod 9 eq 0 and Integers()!S[3] mod 9 eq 0 and Integers()!S[4] mod 9 eq 0 and Integers()!S[5] mod 9 eq 0 and Integers()!S[6] mod 9 eq 0 and Integers()!S[7] mod 9 eq 0  and Integers()!S[8] mod 9 eq 0
and Integers()!S[9] mod 9 eq 0 and Integers()!S[10] mod 9 eq 0 and Integers()!S[11] mod 9 eq 0 and Integers()!S[12] mod 9 eq 0
and Integers()!S[13] mod 9 eq 0 and Integers()!S[14] mod 9 eq 0 and Integers()!S[15] mod 9 eq 0 then [a,b,c,d];
end if;
else continue;
end if;
end for;end for;end for;end for;end for;end for;end for;end for;



 for a in Integers(9) do;
for b in Integers(9) do;
for c in Integers(9) do;
for d in Integers(9) do;
for e in Integers(9) do;
for f in Integers(9) do;
for g in Integers(9) do;
for h in Integers(9) do;
if Integers()!a mod 3 eq P[3][1] and Integers()!b mod 3 eq P[3][2] and Integers()!c mod 3 eq P[3][3] and Integers()!d mod 3 eq P[3][4] and
Integers()!e mod 3 eq P[3][5] and Integers()!f mod 3 eq P[3][6] and Integers()!g mod 3 eq P[3][7] and Integers()!h mod 3 eq P[3][8]  then
S:=[Evaluate(DefiningEquations(C)[i],[a,b,c,d,e,f,g,h]): i in [1..#DefiningEquations(C)]];
if Integers()!S[1] mod 9 eq 0 and Integers()!S[2] mod 9 eq 0 and Integers()!S[3] mod 9 eq 0 and Integers()!S[4] mod 9 eq 0 and Integers()!S[5] mod 9 eq 0 and Integers()!S[6] mod 9 eq 0 and Integers()!S[7] mod 9 eq 0  and Integers()!S[8] mod 9 eq 0
and Integers()!S[9] mod 9 eq 0 and Integers()!S[10] mod 9 eq 0 and Integers()!S[11] mod 9 eq 0 and Integers()!S[12] mod 9 eq 0
and Integers()!S[13] mod 9 eq 0 and Integers()!S[14] mod 9 eq 0 and Integers()!S[15] mod 9 eq 0 then [a,b,c,d];
end if;
else continue;
end if;
end for;end for;end for;end for;end for;end for;end for;end for;



 for a in Integers(9) do;
for b in Integers(9) do;
for c in Integers(9) do;
for d in Integers(9) do;
for e in Integers(9) do;
for f in Integers(9) do;
for g in Integers(9) do;
for h in Integers(9) do;
if Integers()!a mod 3 eq P[4][1] and Integers()!b mod 3 eq P[4][2] and Integers()!c mod 3 eq P[4][3] and Integers()!d mod 3 eq P[4][4] and
Integers()!e mod 3 eq P[4][5] and Integers()!f mod 3 eq P[4][6] and Integers()!g mod 3 eq P[4][7] and Integers()!h mod 3 eq P[4][8]  then
S:=[Evaluate(DefiningEquations(C)[i],[a,b,c,d,e,f,g,h]): i in [1..#DefiningEquations(C)]];
if Integers()!S[1] mod 9 eq 0 and Integers()!S[2] mod 9 eq 0 and Integers()!S[3] mod 9 eq 0 and Integers()!S[4] mod 9 eq 0 and Integers()!S[5] mod 9 eq 0 and Integers()!S[6] mod 9 eq 0 and Integers()!S[7] mod 9 eq 0  and Integers()!S[8] mod 9 eq 0
and Integers()!S[9] mod 9 eq 0 and Integers()!S[10] mod 9 eq 0 and Integers()!S[11] mod 9 eq 0 and Integers()!S[12] mod 9 eq 0
and Integers()!S[13] mod 9 eq 0 and Integers()!S[14] mod 9 eq 0 and Integers()!S[15] mod 9 eq 0 then [a,b,c,d];
end if;
else continue;
end if;
end for;end for;end for;end for;end for;end for;end for;end for;
