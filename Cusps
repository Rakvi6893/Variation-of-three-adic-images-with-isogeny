function RationalCusps(N,G)

//Input : Here G is a subgroup of GL_2(Z/nZ) that has full determinant and contains -I, N is the level of G.  
//Output : The number of rational cusps of modular curve X_G

GL2:=GL(2,Integers(N));
U:=sub<GL2|[[-1,0,0,-1],[1,1,0,1]]>;
M:=CreateModularCurveRec(N,Generators(G));
SL2 := SL(2,Integers(N));    
U,pi:=UnitGroup(Integers(N));
s:={};
stabs:=AssociativeArray();
for i in [1..#M`cusps] do;
 stabs[i]:=[];
 end for;
for u in Generators(U) do
      d:=Integers(N)!pi(u);
      b:=GL2![1,0,0,d];
      flag:=exists(g){g: g in G | Determinant(g) eq d};
      error if not flag, "Group G should have full determinant.";
      sigma:=[FindCuspPair(M,SL2!(g^(-1)*GL2!M`cusps[i]*b))[1]: i in [1..#M`cusps]];
      s:=s join {sigma};
      for i in [1..#M`cusps] do
	  if sigma[i] eq i then
	      Include(~stabs[i], d);
	  end if;
      end for;
end for;
  RC:=0;
 for i in [1..#M`cusps] do;
  H:=sub<U|[g@@pi : g in stabs[i]]>;
  if #H eq #U then RC:=RC+1; end if; end for;
  return RC;
  end function;
